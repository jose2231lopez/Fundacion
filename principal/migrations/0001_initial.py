# Generated by Django 5.1.3 on 2024-12-06 15:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BeneficiariosProyectos',
            fields=[
                ('beneficiario_proyecto_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'beneficiarios_proyectos',
                'db_table_comment': 'Esta tabla establece una relacion entres Beneficiarios y Proyectos en la fundacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BeneficiariosRegiones',
            fields=[
                ('beneficiario_region_id', models.AutoField(primary_key=True, serialize=False)),
                ('beneficiario_id', models.IntegerField()),
                ('region_id', models.IntegerField()),
            ],
            options={
                'db_table': 'beneficiarios_regiones',
                'db_table_comment': 'Esta tabla establece una relacion entre beneficiarios y regiones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoriasProyectos',
            fields=[
                ('categoria_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_categoria', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'categorias_proyectos',
                'db_table_comment': 'Esta tabla establece una relacion entre la tabla de categorias y proyectos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'fundacion.django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Documentos',
            fields=[
                ('documento_id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_documento', models.CharField(choices=[('Cédula', 'Cédula'), ('Tarjeta de identidad', 'Tarjeta de identidad'), ('Cédula de extranjería', 'Cédula de extranjería'), ('Pasaporte', 'Pasaporte')], max_length=100)),
                ('numero_documento', models.CharField(max_length=50)),
                ('nombre_documento', models.CharField(blank=True, max_length=255, null=True)),
                ('ruta_documento', models.CharField(blank=True, max_length=255, null=True)),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'documentos',
                'db_table_comment': 'Esta tabla se encarga de guardar los documentos que tiene cada beneficiario en la fundación',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Donaciones',
            fields=[
                ('donacion_id', models.AutoField(primary_key=True, serialize=False)),
                ('donante', models.CharField(max_length=100)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_donacion', models.DateField()),
            ],
            options={
                'db_table': 'donaciones',
                'db_table_comment': 'Esta tabla se encarga de guardar las donaciones que se le realizan a la fundacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notificaciones',
            fields=[
                ('notificacion_id', models.AutoField(primary_key=True, serialize=False)),
                ('mensaje', models.TextField()),
                ('fecha_envio', models.DateTimeField()),
            ],
            options={
                'db_table': 'notificaciones',
                'db_table_comment': 'Esta tabla se encarga de guardar las notificaciones que se le realizan a cada usuario en la fundacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permisos',
            fields=[
                ('permiso_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_permiso', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'permisos',
                'db_table_comment': 'Esta tabla se encarga de guardar los permisos que se le asignan a cada rol',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProyectosActividades',
            fields=[
                ('proyecto_actividad_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'proyectos_actividades',
                'db_table_comment': 'Almacena los ids de las tablas de Proyectos Y Actividades',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProyectosRegiones',
            fields=[
                ('proyecto_region_id', models.AutoField(primary_key=True, serialize=False)),
                ('proyecto_id', models.IntegerField()),
                ('region_id', models.IntegerField()),
            ],
            options={
                'db_table': 'proyectos_regiones',
                'db_table_comment': 'Esta tabla establece una relacion entre proyectos y regiones ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recursos',
            fields=[
                ('recurso_id', models.AutoField(primary_key=True, serialize=False)),
                ('tipo_recurso', models.CharField(choices=[('Economicos', 'Economicos'), ('Materiales', 'Materiales'), ('Tecnologicos', 'Tecnologicos')], max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('cantidad', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'recursos',
                'db_table_comment': 'Esta tabla se encarga de guardar los recursos que tiene la fundacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Regiones',
            fields=[
                ('region_id', models.AutoField(primary_key=True, serialize=False)),
                ('departamento', models.CharField(choices=[('Cauca', 'Cauca')], max_length=5)),
                ('municipio', models.CharField(choices=[('Almaguer', 'Almaguer'), ('Argelia', 'Argelia'), ('Bolívar', 'Bolívar'), ('Buenos Aires', 'Buenos Aires'), ('Cajibío', 'Cajibío'), ('Caldono', 'Caldono'), ('Caloto', 'Caloto'), ('Corinto', 'Corinto'), ('El Tambo', 'El Tambo'), ('Florencia', 'Florencia'), ('Guachené', 'Guachené'), ('Guapí', 'Guapí'), ('Inzá', 'Inzá'), ('Jambaló', 'Jambaló'), ('La Sierra', 'La Sierra'), ('La Vega', 'La Vega'), ('López de Micay', 'López de Micay'), ('Mercaderes', 'Mercaderes'), ('Miranda', 'Miranda'), ('Morales', 'Morales'), ('Padilla', 'Padilla'), ('Páez', 'Páez'), ('Patía', 'Patía'), ('Piamonte', 'Piamonte'), ('Piendamó', 'Piendamó'), ('Popayán', 'Popayán'), ('Puerto Tejada', 'Puerto Tejada'), ('Puracé', 'Puracé'), ('Rosas', 'Rosas'), ('San Sebastián', 'San Sebastián'), ('Santa Rosa', 'Santa Rosa'), ('Santander de Quilichao', 'Santander de Quilichao'), ('Silvia', 'Silvia'), ('Sotará', 'Sotará'), ('Suárez', 'Suárez'), ('Timbío', 'Timbío'), ('Timbiquí', 'Timbiquí'), ('Toribío', 'Toribío'), ('Totoró', 'Totoró'), ('Villa Rica', 'Villa Rica')], max_length=22)),
                ('vereda', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'regiones',
                'db_table_comment': 'Regiones donde están ubicados los beneficiarios, incluyendo departamento, municipio y vereda',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('rol_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_rol', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'roles',
                'db_table_comment': 'Esta tabla se encarga de guardar los roles que tiene cada ususario en la fundacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RolesPermisos',
            fields=[
                ('rol_permiso_id', models.AutoField(primary_key=True, serialize=False)),
                ('rol_id', models.IntegerField()),
                ('permiso_id', models.IntegerField()),
            ],
            options={
                'db_table': 'roles_permisos',
                'db_table_comment': 'Esta tabla establece una relacion entre roles y permisos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seguimientos',
            fields=[
                ('seguimiento_id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_seguimiento', models.DateField()),
                ('tipo_seguimiento', models.CharField(max_length=100)),
                ('detalle', models.TextField(blank=True, null=True)),
                ('responsable', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'seguimientos',
                'db_table_comment': 'Esta tabla se encarga de guardar todos los seguimientos que se le realizan a los proyectos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SesionesFormacion',
            fields=[
                ('sesion_id', models.AutoField(primary_key=True, serialize=False)),
                ('tema', models.CharField(max_length=255)),
                ('fecha_sesion', models.DateField()),
                ('duracion', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'sesiones_formacion',
                'db_table_comment': 'Esta tabla guarda todas las sesiones de formación que se hacen acerca de los proyectos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuariosNotificaciones',
            fields=[
                ('usuarios_notificaciones_id', models.IntegerField(blank=True, db_column='Usuarios_Notificaciones_id', null=True)),
                ('usuario_id', models.IntegerField(primary_key=True, serialize=False)),
                ('notificacion_id', models.IntegerField()),
            ],
            options={
                'db_table': 'usuarios_notificaciones',
                'db_table_comment': 'Esta tabla establece una relacion entre usuarios y notificaciones ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuariosRoles',
            fields=[
                ('usuario_rol_id', models.AutoField(primary_key=True, serialize=False)),
                ('usuario_id', models.IntegerField()),
                ('rol_id', models.IntegerField()),
            ],
            options={
                'db_table': 'usuarios_roles',
                'db_table_comment': 'Esta tabla establece una relacion entre usuarios y roles ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Actividades',
            fields=[
                ('actividad_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_actividad', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_actividad', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(blank=True, choices=[('Completada', 'Completada'), ('Pendiente', 'Pendiente'), ('Cancelada', 'Cancelada')], max_length=20, null=True)),
            ],
            options={
                'db_table': 'actividades',
                'db_table_comment': 'Actividades de cada proyecto',
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Beneficiarios',
            fields=[
                ('beneficiario_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, max_length=100, null=True)),
                ('apellido', models.CharField(blank=True, max_length=100, null=True)),
                ('genero', models.CharField(blank=True, choices=[('M', 'M'), ('F', 'F'), ('Otro', 'Otro')], max_length=4, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('grupo_etnico', models.CharField(blank=True, choices=[('Campesino', 'Campesino'), ('Indígena', 'Indígena'), ('Mestizo', 'Mestizo'), ('Afrocolombiano', 'Afrocolombiano'), ('Palenquero', 'Palenquero'), ('Raizal', 'Raizal'), ('Rom', 'Rom'), ('Otra', 'Otra'), ('Ninguna', 'Ninguna')], max_length=14, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_registro', models.DateTimeField()),
            ],
            options={
                'db_table': 'beneficiarios',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('grupos', models.CharField(max_length=255)),
                ('rol', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'usuarios',
                'db_table_comment': 'Esta tabla almacena la información de los usuarios con sus respectivos roles y grupos.',
            },
        ),
        migrations.CreateModel(
            name='Proyectos',
            fields=[
                ('proyecto_id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_proyecto', models.CharField(blank=True, max_length=100, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_inicio', models.DateField(blank=True, null=True)),
                ('fecha_fin', models.DateField(blank=True, null=True)),
                ('estado', models.CharField(blank=True, choices=[('Activo', 'Activo'), ('Completado', 'Completado'), ('Pendiente', 'Pendiente'), ('Cancelado', 'Cancelado')], max_length=10, null=True)),
                ('actividad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='principal.actividades')),
                ('beneficiario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='principal.beneficiarios')),
            ],
            options={
                'db_table': 'proyectos',
            },
        ),
    ]
